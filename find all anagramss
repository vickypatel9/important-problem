class Solution {
     public static List<Integer> findAnagrams(String s, String p) {
        List<Integer> ans = new ArrayList<>();
        HashMap<Character, Integer> map2 = new HashMap<>(), map1 = new HashMap<>();
        for (int i = 0; i < p.length(); i++) {
            map2.put(p.charAt(i), map2.getOrDefault(p.charAt(i), 0) + 1);
        }
        int i = -1, j = -1;
        while (true) {
            boolean f1 = false, f2 = false;
            while (j < s.length() - 1) {
                f1 = true;
                j++;
                char ch = s.charAt(j);
                map1.put(ch, map1.getOrDefault(ch, 0) + 1);
                if (!map2.containsKey(ch) || map1.get(ch) > map2.get(ch)) break;
                if (j - i == p.length()) ans.add(i + 1);

            }
            while (i < j) {
                i++;
                f2 = true;
                char ch = s.charAt(i);
                map1.put(ch, map1.getOrDefault(ch, 0) - 1);
                if (map1.get(ch) <= 0) map1.remove(ch);
                if (!map2.containsKey(ch)) break;
                if (map1.containsKey(ch) && map1.get(ch).equals(map2.get(ch))) {
                    if (j - i == p.length()) ans.add(i + 1);
                    break;
                }
            }
            if (!f1 && !f2) break;
        }
        return ans;
    }
}
